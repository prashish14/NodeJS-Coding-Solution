Project structure:
    dist/
        index.js -> [created after converting typescript file(.ts) to javascript file(.js)]
        index.js.map -> [autogenerated no need to worry]

    node_modules/
        contains all the libraries
    
    package.json -> contains project details and dependencies information
    package-lock.json -> auto generated. no need to worry about this file.
    tsconfig.json -> configuration file needed by typescript. This file contains 
        details like which files need to be considered, which is the node_modules dir etc.
    tslint.json -> file needed by code linter. Best practise to use linter with your code.

    src/
        index.ts -> contains the main API code for both v1 and v2 versions of the API
    

index.ts
========
Notes have been added in the index.ts file itself explaning what each part of the code 
is doing. Please take a look at that file.

How to run the server:
=====================

1. Go inside rest-api/ folder
2. run 
    npm install
3. run
    npm run dev
4. Open postman (or any rest client) and make post request 
    URL: 
        localhost:8080/api/v1/parse/
    Body:
        {
            "data": "JOHN0000MICHAEL0009994567"
        }


Approach / Design:
1. Import express and body-parser libraries
2. Create a server using express library.
3. Either use 8080 port or port set in PORT environment variable.
4. Use body-parser middleware.
5. Create two routers for two version v1 and v2 of the APIs
6. Create Person interface to be used when sending response from APIs
7. Logic for v1 and v2:
    - Extract data from data attribute in request body
    - Split data by 0000 to get firstName
    - Split data by 000 to get lastName
    - Split data by 000 to get clientID
    - Finally create person object using Person interface
    - Send response in the given format
8. Finally start the node.js server here on given port